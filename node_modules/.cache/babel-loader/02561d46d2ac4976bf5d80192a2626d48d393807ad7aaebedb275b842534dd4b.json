{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scatea\\\\Desktop\\\\WebCourse\\\\Investment Calculator\\\\01-starting-project\\\\src\\\\App.js\";\nimport { useState } from \"react\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Components/Form\";\nimport ColumnTables from \"./Components/ColumnTables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [yearlyData, setYearlyData] = useState([]);\n  const yearlyData = [];\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput[\"saving\"]; // feel free to change the shape of this input object!\n\n    const yearlyContribution = +userInput[\"contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"return\"] / 100;\n    const duration = +userInput[\"durationValue\"];\n\n    // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      //const totalInterest = yearlyInterest[i]\n      let totalInterest = 0;\n\n      // const newData = {\n      //   year: i + 1,\n      //   yearlyInterest: +yearlyInterest.toFixed(2),\n      //   savingsEndOfYear: currentSavings,\n      //   yearlyContribution: yearlyContribution,\n      //   totalInterest: totalInterest,\n      // };\n      // setYearlyData([newData, ...yearlyData]);\n\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: +yearlyInterest.toFixed(2),\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalInterest: totalInterest\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  console.log(yearlyData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmitHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [yearlyData.map(year => {\n          return /*#__PURE__*/_jsxDEV(ColumnTables, {\n            data: year,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"YEAR NUMBER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"TOTAL SAVINGS END OF YEAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"INTEREST GAINED IN YEAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"TOTAL INTEREST GAINED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"TOTAL INVESTED CAPITAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","Form","ColumnTables","jsxDEV","_jsxDEV","App","yearlyData","calculateHandler","userInput","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","totalInterest","push","year","toFixed","savingsEndOfYear","console","log","children","onSubmitHandler","fileName","_jsxFileName","lineNumber","columnNumber","className","map","data","_c","$RefreshReg$"],"sources":["C:/Users/scatea/Desktop/WebCourse/Investment Calculator/01-starting-project/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Components/Form\";\nimport ColumnTables from \"./Components/ColumnTables\";\n\nfunction App() {\n  // const [yearlyData, setYearlyData] = useState([]);\n  const yearlyData = [];\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    let currentSavings = +userInput[\"saving\"]; // feel free to change the shape of this input object!\n\n    const yearlyContribution = +userInput[\"contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"return\"] / 100;\n    const duration = +userInput[\"durationValue\"];\n\n    // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      //const totalInterest = yearlyInterest[i]\n      let totalInterest = 0;\n\n      // const newData = {\n      //   year: i + 1,\n      //   yearlyInterest: +yearlyInterest.toFixed(2),\n      //   savingsEndOfYear: currentSavings,\n      //   yearlyContribution: yearlyContribution,\n      //   totalInterest: totalInterest,\n      // };\n      // setYearlyData([newData, ...yearlyData]);\n\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: +yearlyInterest.toFixed(2),\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalInterest: totalInterest,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n  console.log(yearlyData);\n  return (\n    <div>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      <Form onSubmitHandler={calculateHandler}></Form>\n      <table className=\"result\">\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Total Savings</th>\n            <th>Interest (Year)</th>\n            <th>Total Interest</th>\n            <th>Invested Capital</th>\n          </tr>\n        </thead>\n        <tbody>\n          {yearlyData.map((year) => {\n            return <ColumnTables data={year}> </ColumnTables>;\n          })}\n          <tr>\n            <td>YEAR NUMBER</td>\n            <td>TOTAL SAVINGS END OF YEAR</td>\n            <td>INTEREST GAINED IN YEAR</td>\n            <td>TOTAL INTEREST GAINED</td>\n            <td>TOTAL INVESTED CAPITAL</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}