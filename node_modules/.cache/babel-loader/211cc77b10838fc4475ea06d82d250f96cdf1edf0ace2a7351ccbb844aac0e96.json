{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scatea\\\\Desktop\\\\WebCourse\\\\Investment Calculator\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Components/Form\";\nimport ColumnTables from \"./Components/ColumnTables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState(\"\");\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    const yearlyData = [];\n    let currentSavings = +userInput[\"saving\"]; // feel free to change the shape of this input object!\n\n    const yearlyContribution = +userInput[\"contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"return\"] / 100;\n    const duration = +userInput[\"durationValue\"];\n    let totalInterest = 0;\n    // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalInterest = totalInterest + yearlyInterest;\n      //const totalInterest = yearlyInterest[i]\n\n      // const newData = {\n      //   year: i + 1,\n      //   yearlyInterest: +yearlyInterest.toFixed(2),\n      //   savingsEndOfYear: currentSavings,\n      //   yearlyContribution: yearlyContribution,\n      //   totalInterest: totalInterest,\n      // };\n      // setYearlyData([newData, ...yearlyData]);\n\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: +yearlyInterest.toFixed(2),\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalInterest: totalInterest\n      });\n      setFormData(yearlyData);\n    }\n\n    // do something with yearlyData ...\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmitHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: formData.map(year => {\n          return /*#__PURE__*/_jsxDEV(ColumnTables, {\n            data: year,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BCN4NASFFnuP6J/mcxSNRuxQMh8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","Form","ColumnTables","jsxDEV","_jsxDEV","App","_s","formData","setFormData","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","totalInterest","i","yearlyInterest","push","year","toFixed","savingsEndOfYear","console","log","children","onSubmitHandler","fileName","_jsxFileName","lineNumber","columnNumber","className","map","data","_c","$RefreshReg$"],"sources":["C:/Users/scatea/Desktop/WebCourse/Investment Calculator/01-starting-project/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport logo from \"./assets/investment-calculator-logo.png\";\nimport Form from \"./Components/Form\";\nimport ColumnTables from \"./Components/ColumnTables\";\n\nfunction App() {\n  const [formData, setFormData] = useState(\"\");\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n    const yearlyData = [];\n    let currentSavings = +userInput[\"saving\"]; // feel free to change the shape of this input object!\n\n    const yearlyContribution = +userInput[\"contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"return\"] / 100;\n    const duration = +userInput[\"durationValue\"];\n\n    let totalInterest = 0;\n    // // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      totalInterest = totalInterest + yearlyInterest;\n      //const totalInterest = yearlyInterest[i]\n\n      // const newData = {\n      //   year: i + 1,\n      //   yearlyInterest: +yearlyInterest.toFixed(2),\n      //   savingsEndOfYear: currentSavings,\n      //   yearlyContribution: yearlyContribution,\n      //   totalInterest: totalInterest,\n      // };\n      // setYearlyData([newData, ...yearlyData]);\n\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: +yearlyInterest.toFixed(2),\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n        totalInterest: totalInterest,\n      });\n\n      setFormData(yearlyData);\n    }\n\n    // do something with yearlyData ...\n  };\n  console.log(formData);\n  return (\n    <div>\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      <Form onSubmitHandler={calculateHandler}></Form>\n      <table className=\"result\">\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Total Savings</th>\n            <th>Interest (Year)</th>\n            <th>Total Interest</th>\n            <th>Invested Capital</th>\n          </tr>\n        </thead>\n        <tbody>\n          {formData.map((year) => {\n            return <ColumnTables data={year}> </ColumnTables>;\n          })}\n          {/* <tr>\n            <td>YEAR NUMBER</td>\n            <td>TOTAL SAVINGS END OF YEAR</td>\n            <td>INTEREST GAINED IN YEAR</td>\n            <td>TOTAL INTEREST GAINED</td>\n            <td>TOTAL INVESTED CAPITAL</td>\n          </tr> */}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}